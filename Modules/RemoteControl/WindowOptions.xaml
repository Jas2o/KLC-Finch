<Window x:Class="KLC_Finch.Modules.RemoteControl.WindowOptions"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KLC_Finch.Modules.RemoteControl"
        mc:Ignorable="d"
        Title="KLC-Finch: Remote Control Settings" MinHeight="250" Width="460" SizeToContent="Height" ResizeMode="NoResize" WindowStartupLocation="CenterOwner">
    <Grid>
        <TabControl>
            <TabItem Header="Settings">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <GroupBox Header="Debug Text">
                            <StackPanel>
                                <CheckBox x:Name="chkDebugKeyboardHook" IsChecked="{Binding DisplayOverlayKeyboardHook}"  Content="Show Keyboard Hook Active" Margin="0,5,0,0" ToolTip="Overlay at top middle." />
                                <CheckBox x:Name="chkDebugKeyboardMod" IsChecked="{Binding DisplayOverlayKeyboardMod}"  Content="Show Modifier Key Events" Margin="0,5,0,0" ToolTip="Overlay at top left." />
                                <CheckBox x:Name="chkDebugKeyboardOther" IsChecked="{Binding DisplayOverlayKeyboardOther}" Content="Show Other Key/Click Events" Margin="0,5,0,0" ToolTip="Overlay at top left." />
                                <CheckBox x:Name="chkDebugMouse" IsChecked="{Binding DisplayOverlayMouse}" Content="Show Mouse Move Events" Margin="0,5,0,0" ToolTip="Overlay at top right." />
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Control">
                            <StackPanel>
                                <CheckBox x:Name="toolSettingAutotypeSkipLengthCheck" IsChecked="{Binding AutotypeSkipLengthCheck}" Content="Autotype: Skip Length Check" Margin="0,5,0,0" ToolTip="Skips the over 50 character confirmation box." />
                                <CheckBox x:Name="chkSettingStartControlEnabled" IsChecked="{Binding StartControlEnabled}" Content="Start Shared with Control Enabled" Margin="0,5,0,0" ToolTipService.ShowDuration="12000">
                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            If 'Start in Multi-Screen' is enabled, this setting also affects the starting view:<LineBreak/>
                                            Ticked: Default screen<LineBreak/>
                                            Unticked: Overview (best for Multi-Screen)
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox x:Name="chkSettingKeyboardHook" IsChecked="{Binding KeyboardHook}" Content="Always hook modifier keys" Margin="0,5,0,0">
                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            The keyboard hook allows the keyboard to ask more like Kaseya Live Connect's but does come with the same risk of randomly acting unusual.<LineBreak/>
                                            <LineBreak/>
                                            Ticked: Always allows Finch to capture Win/Ctrl/Alt/Shift.<LineBreak/>
                                            Unticked: Scroll Lock is used to toggle the hook modifier keys feature.<LineBreak/>
                                            <LineBreak/>
                                            When cher method is used, the overlay 'Keyboard Hook' will be present.
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox x:Name="chkSettingMacSwapCtrlWin" IsChecked="{Binding MacSwapCtrlWin}" Content="Swap Ctrl/Win keys on Macs" ToolTip="Finch cannot keep focus when Win is pressed." Margin="0,5,0,0" />
                                <CheckBox x:Name="chkSettingClipboardSync" IsChecked="{Binding ClipboardSyncEnabled}" Content="Clipboard sync: both directions" Margin="0,5,0,0" ToolTipService.ShowDuration="12000">
                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            Ticked: Might not work well (Kaseya-like).<LineBreak/>
                                            Unticked: Receive-only, prevent leaking credentials.
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                    <StackPanel Grid.Column="2">
                        <GroupBox Header="Multi-Screen">
                            <StackPanel>
                                <CheckBox x:Name="chkSettingStartMultiScreen" IsChecked="{Binding StartMultiScreen}" Content="Start in Multi-Screen" Margin="0,5,0,0" ToolTipService.ShowDuration="12000">
                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            Ticked: Render layout will start in Multi-Screen.<LineBreak/>
                                            Unticked: Render layout will start in Legacy (Kaseya-like).
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox x:Name="chkSettingMultiAltFit" IsChecked="{Binding MultiAltFit}" Content="Fit Screen Edges" Margin="0,5,0,0" ToolTipService.ShowDuration="12000">
                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            Ticked: focused screen may be off-center and scaled down to allow showing adjacent screens.<LineBreak/>
                                            Recommended for working with multiple screens.<LineBreak/>
                                            <LineBreak/>
                                            Unticked: focused screen will be centered and scaled normally (Kaseya-like).
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox x:Name="chkSettingMultiShowCursor" IsChecked="{Binding MultiShowCursor}" Content="Show Cursor Updates" Margin="0,5,0,0" ToolTipService.ShowDuration="12000">
                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            Kaseya only tells us the cursor position when the cursor picture changes.<LineBreak/>
                                            Allows you to spot the screen that initially has the end-user's cursor.
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Graphics">
                            <StackPanel>
                                <CheckBox x:Name="chkSettingUseYUVShader" IsChecked="{Binding UseYUVShader}" Content="Use YUV shader (less CPU)" Margin="0,5,0,0" ToolTipService.ShowDuration="12000">
                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            Kaseya's video feed is VP8 format, which uses YUV to reduce bandwidth.<LineBreak/>
                                            However displaying YUV requires it to be converted to RGB at some point.<LineBreak/>
                                            <LineBreak/>
                                            Ticked (YUV): OpenGL shader handles the conversion (faster).<LineBreak/>
                                            Unticked (RGB): CPU handles the conversion (slower).
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                                <CheckBox x:Name="chkSettingForceCanvas" IsChecked="{Binding ForceCanvas}" Content="Force Canvas RGB (for testing)" Margin="0,5,0,0" ToolTipService.ShowDuration="12000">
                                    <CheckBox.ToolTip>
                                        <TextBlock>
                                            For testing compatiblity feature only.<LineBreak/>
                                            <LineBreak/>
                                            Canvas rendering is used when OpenGL 2.0 minimum is not available.<LineBreak/>
                                            Canvas effectively works in 'RGB' mode, therefore is slower than OpenGL+YUV shader.
                                        </TextBlock>
                                    </CheckBox.ToolTip>
                                </CheckBox>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Initial Window Size">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="W:"/>
                                <TextBox x:Name="txtSizeWidth" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Width="50" />
                                <Label Content="H:"/>
                                <TextBox x:Name="txtSizeHeight" Grid.Row="1" Grid.Column="1" Width="50" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0">
                        <Label Content="Presets:"/>
                        <Button x:Name="btnPresetRecommended" Content="Multi-Screen" Margin="1,0,0,0" VerticalAlignment="Center" Click="btnPresetRecommended_Click"/>
                        <Button x:Name="btnPresetKaseya" Content="Kaseya" Margin="6,0,0,3" VerticalAlignment="Bottom" Click="btnPresetKaseya_Click"/>
                    </StackPanel>

                    <Button x:Name="btnSaveSettings" Content="Save Settings" Click="btnSaveSettings_Click" Margin="1,0,0,0" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="100"/>
                </Grid>
            </TabItem>
            <TabItem Header="Hotkeys">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="5">
                        Autotype
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="1">
                        - Middle mouse button<LineBreak/>
                        - Ctrl+Shift+V<LineBreak/>
                        - Ctrl+`
                    </TextBlock>

                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Row="1">
                        Toggle Keyboard Hook<LineBreak/>
                        for Win/Ctrl/Alt/Shift
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="1" Grid.Row="1">
                        - Scroll Lock
                    </TextBlock>

                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Row="2">
                        Key release panic
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="1" Grid.Row="2">
                        - Pause/Break
                    </TextBlock>

                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Row="3">
                        Overview with<LineBreak/>
                        Control Disabled
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="1" Grid.Row="3">
                        - F1
                    </TextBlock>

                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Row="4">
                        Enable Control
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="5" Grid.Column="1" Grid.Row="4">
                        - F2<LineBreak/>
                        - Double-click
                    </TextBlock>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
